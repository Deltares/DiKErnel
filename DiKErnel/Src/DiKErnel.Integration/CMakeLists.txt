# Set library name
set(LIBNAME DiKErnel.Integration)

# Set folder names
set(PUBLIC_FOLDER Public)
set(PUBLIC_DATA_FOLDER ${PUBLIC_FOLDER}/Data)
set(PUBLIC_EXCEPTIONS_FOLDER ${PUBLIC_FOLDER}/Exceptions)
set(INTERNAL_DATA_FOLDER Internal/Data)
set(INTERNAL_DATA_NATURAL_STONE_REVETMENT_FOLDER ${INTERNAL_DATA_FOLDER}/NaturalStoneRevetment)
set(INTERNAL_DATA_GRASS_REVETMENT_WAVE_IMPACT_FOLDER ${INTERNAL_DATA_FOLDER}/GrassRevetmentWaveImpact)
set(INTERNAL_EXCEPTIONS_FOLDER Internal/Exceptions)

# Define sources
set(SOURCEFILES_PUBLIC
  ${PUBLIC_FOLDER}/RevetmentCalculationInputBuilder.cpp
  ${PUBLIC_FOLDER}/RevetmentCalculationInputBuilder.h
)

set(SOURCEFILES_PUBLIC_DATA
  ${PUBLIC_DATA_FOLDER}/GrassRevetmentTopLayerType.h
  ${PUBLIC_DATA_FOLDER}/GrassRevetmentWaveImpactLocationConstructionProperties.cpp
  ${PUBLIC_DATA_FOLDER}/GrassRevetmentWaveImpactLocationConstructionProperties.h
  ${PUBLIC_DATA_FOLDER}/NaturalStoneRevetmentLocationConstructionProperties.cpp
  ${PUBLIC_DATA_FOLDER}/NaturalStoneRevetmentLocationConstructionProperties.h
  ${PUBLIC_DATA_FOLDER}/NaturalStoneRevetmentTopLayerType.h
  ${PUBLIC_DATA_FOLDER}/RevetmentLocationConstructionPropertiesBase.cpp
  ${PUBLIC_DATA_FOLDER}/RevetmentLocationConstructionPropertiesBase.h
)

set(SOURCEFILES_PUBLIC_EXCEPTIONS
  ${PUBLIC_EXCEPTIONS_FOLDER}/RevetmentCalculationInputBuilderException.cpp
  ${PUBLIC_EXCEPTIONS_FOLDER}/RevetmentCalculationInputBuilderException.h  
)

set(SOURCEFILES_INTERNAL_DATA
  ${INTERNAL_DATA_FOLDER}/CalculationInput.cpp
  ${INTERNAL_DATA_FOLDER}/CalculationInput.h
  ${INTERNAL_DATA_FOLDER}/LocationDependentInput.cpp
  ${INTERNAL_DATA_FOLDER}/LocationDependentInput.h
  ${INTERNAL_DATA_FOLDER}/TimeDependentInput.cpp
  ${INTERNAL_DATA_FOLDER}/TimeDependentInput.h
)

set(SOURCEFILES_INTERNAL_DATA_GRASS_REVETMENT_WAVE_IMPACT
  ${INTERNAL_DATA_GRASS_REVETMENT_WAVE_IMPACT_FOLDER}/GrassRevetmentWaveImpactTimeLine.cpp
  ${INTERNAL_DATA_GRASS_REVETMENT_WAVE_IMPACT_FOLDER}/GrassRevetmentWaveImpactTimeLine.h
  ${INTERNAL_DATA_GRASS_REVETMENT_WAVE_IMPACT_FOLDER}/GrassRevetmentWaveImpactLocationDependentInput.cpp
  ${INTERNAL_DATA_GRASS_REVETMENT_WAVE_IMPACT_FOLDER}/GrassRevetmentWaveImpactLocationDependentInput.h
  ${INTERNAL_DATA_GRASS_REVETMENT_WAVE_IMPACT_FOLDER}/GrassRevetmentWaveImpactWaveAngleImpact.cpp
  ${INTERNAL_DATA_GRASS_REVETMENT_WAVE_IMPACT_FOLDER}/GrassRevetmentWaveImpactWaveAngleImpact.h
)

set(SOURCEFILES_INTERNAL_DATA_NATURAL_STONE_REVETMENT
  ${INTERNAL_DATA_NATURAL_STONE_REVETMENT_FOLDER}/NaturalStoneRevetmentDistanceMaximumWaveElevation.cpp
  ${INTERNAL_DATA_NATURAL_STONE_REVETMENT_FOLDER}/NaturalStoneRevetmentDistanceMaximumWaveElevation.h
  ${INTERNAL_DATA_NATURAL_STONE_REVETMENT_FOLDER}/NaturalStoneRevetmentHydraulicLoads.cpp
  ${INTERNAL_DATA_NATURAL_STONE_REVETMENT_FOLDER}/NaturalStoneRevetmentHydraulicLoads.h
  ${INTERNAL_DATA_NATURAL_STONE_REVETMENT_FOLDER}/NaturalStoneRevetmentLocationDependentInput.cpp
  ${INTERNAL_DATA_NATURAL_STONE_REVETMENT_FOLDER}/NaturalStoneRevetmentLocationDependentInput.h
  ${INTERNAL_DATA_NATURAL_STONE_REVETMENT_FOLDER}/NaturalStoneRevetmentLowerLimitLoading.cpp
  ${INTERNAL_DATA_NATURAL_STONE_REVETMENT_FOLDER}/NaturalStoneRevetmentLowerLimitLoading.h
  ${INTERNAL_DATA_NATURAL_STONE_REVETMENT_FOLDER}/NaturalStoneRevetmentNormativeWidthOfWaveImpact.cpp
  ${INTERNAL_DATA_NATURAL_STONE_REVETMENT_FOLDER}/NaturalStoneRevetmentNormativeWidthOfWaveImpact.h
  ${INTERNAL_DATA_NATURAL_STONE_REVETMENT_FOLDER}/NaturalStoneRevetmentUpperLimitLoading.cpp
  ${INTERNAL_DATA_NATURAL_STONE_REVETMENT_FOLDER}/NaturalStoneRevetmentUpperLimitLoading.h
  ${INTERNAL_DATA_NATURAL_STONE_REVETMENT_FOLDER}/NaturalStoneRevetmentWaveAngleImpact.cpp
  ${INTERNAL_DATA_NATURAL_STONE_REVETMENT_FOLDER}/NaturalStoneRevetmentWaveAngleImpact.h
)

set(SOURCEFILES_INTERNAL_EXCEPTIONS
  ${INTERNAL_EXCEPTIONS_FOLDER}/InvalidCalculationDataException.cpp
  ${INTERNAL_EXCEPTIONS_FOLDER}/InvalidCalculationDataException.h
)

# Add library
add_library(${LIBNAME} STATIC
  ${SOURCEFILES_PUBLIC}
  ${SOURCEFILES_PUBLIC_DATA}
  ${SOURCEFILES_PUBLIC_EXCEPTIONS}
  ${SOURCEFILES_INTERNAL_DATA}
  ${SOURCEFILES_INTERNAL_DATA_GRASS_REVETMENT_WAVE_IMPACT}
  ${SOURCEFILES_INTERNAL_DATA_NATURAL_STONE_REVETMENT}
  ${SOURCEFILES_INTERNAL_EXCEPTIONS}
)

# Configure folder structure
set_target_properties(${LIBNAME} PROPERTIES FOLDER Src)
source_group(${PUBLIC_FOLDER} FILES ${SOURCEFILES_PUBLIC})
source_group(${PUBLIC_DATA_FOLDER} FILES ${SOURCEFILES_PUBLIC_DATA})
source_group(${PUBLIC_EXCEPTIONS_FOLDER} FILES ${SOURCEFILES_PUBLIC_EXCEPTIONS})
source_group(${INTERNAL_DATA_FOLDER} FILES ${SOURCEFILES_INTERNAL_DATA})
source_group(${INTERNAL_DATA_GRASS_REVETMENT_WAVE_IMPACT_FOLDER} FILES ${SOURCEFILES_INTERNAL_DATA_GRASS_REVETMENT_WAVE_IMPACT})
source_group(${INTERNAL_DATA_NATURAL_STONE_REVETMENT_FOLDER} FILES ${SOURCEFILES_INTERNAL_DATA_NATURAL_STONE_REVETMENT})
source_group(${INTERNAL_EXCEPTIONS_FOLDER} FILES ${SOURCEFILES_INTERNAL_EXCEPTIONS})

# Expose header files
if (BUILD_WITH_TESTS)
  target_include_directories(${LIBNAME} PUBLIC
    ${CMAKE_CURRENT_SOURCE_DIR}/${PUBLIC_FOLDER}
    ${CMAKE_CURRENT_SOURCE_DIR}/${PUBLIC_DATA_FOLDER}
    ${CMAKE_CURRENT_SOURCE_DIR}/${PUBLIC_EXCEPTIONS_FOLDER}
    ${CMAKE_CURRENT_SOURCE_DIR}/${INTERNAL_DATA_FOLDER}
    ${CMAKE_CURRENT_SOURCE_DIR}/${INTERNAL_DATA_GRASS_REVETMENT_WAVE_IMPACT_FOLDER}
    ${CMAKE_CURRENT_SOURCE_DIR}/${INTERNAL_DATA_NATURAL_STONE_REVETMENT_FOLDER}
    ${CMAKE_CURRENT_SOURCE_DIR}/${INTERNAL_EXCEPTIONS_FOLDER}
  )
else()
  target_include_directories(${LIBNAME}
    PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/${PUBLIC_FOLDER}
    PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/${PUBLIC_DATA_FOLDER}
    PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/${PUBLIC_EXCEPTIONS_FOLDER}
    PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/${INTERNAL_DATA_FOLDER}
    PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/${INTERNAL_DATA_GRASS_REVETMENT_WAVE_IMPACT_FOLDER}
    PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/${INTERNAL_DATA_NATURAL_STONE_REVETMENT_FOLDER}
    PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/${INTERNAL_EXCEPTIONS_FOLDER}
  )
endif()

# Link dependencies
target_link_libraries(${LIBNAME} DiKErnel.Core DiKErnel.DomainLibrary DiKErnel.FunctionLibrary)